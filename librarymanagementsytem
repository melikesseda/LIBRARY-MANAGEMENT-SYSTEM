using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

using System.Data.SqlClient;
using System.Globalization;
using System.Runtime.Remoting.Messaging;
using System.Data.Entity.Validation;

namespace melike
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        LibraryManagementSystemEntities lms = new LibraryManagementSystemEntities();
        private void BtnBookList_Click(object sender, EventArgs e)
        {
            var query = from book in lms.books
                        join author in lms.authors on book.book_author_id equals author.author_id
                        join type in lms.types on book.book_id equals type.book_id
                        select new
                        {
                            
                            author.author_id,
                            author.author_name,
                            author.author_surname,
                            author.author_nationality,
                            book.book_id,
                            book.book_name,
                            type.book_type,
                            book.book_pages
                        };

            dataGridView1.DataSource = query.ToList();
            dataGridView1.Refresh();
        }

        private void BtnUserList_Click(object sender, EventArgs e)
        {
            var query = from user in lms.users
                      
                        select new
                        {
                            user.user_id,
                            user.user_name,
                            user.user_surname,
                            user.user_birthday,
                            user.user_email,
                           
                        };

            dataGridView1.DataSource = query.ToList();
            dataGridView1.Refresh(); // Manually refresh the DataGridView
        }
        private void BtnInsert_Click(object sender, EventArgs e)
        {
            if (comboBox1.SelectedItem.ToString() == "USER")
            {
                users u = new users();
                u.user_name = txtAD.Text; // Adı kaydet
               
                    u.user_email = txtEMAIL.Text; // Emaili kaydet
               
                    u.user_surname = txtSOYAD.Text; // Soyadı kaydet
               
                    u.user_birthday = Convert.ToDateTime(dateDGUNU.Text); // Doğum tarihini kaydet
                
                lms.users.Add(u);

                
                    lms.SaveChanges();
            


                MessageBox.Show("User saved successfully.");

                BtnUserList_Click(sender, e); // Refresh the DataGridView after saving the user
            }
            else if (comboBox1.SelectedItem.ToString() == "ADMIN")
            {
                books b = new books();
               
                    b.book_name = txtKITAPISMI.Text; // Kitap ismini kaydet
                  b.book_pages = Convert.ToInt32(txtSAYFASAYISI.Text); // Sayfa sayısını kaydet
                
                lms.books.Add(b);
                

                authors a = new authors();
                // Her bir alan için boş olmasını kontrol et
                
                    a.author_name = txtYAZARAD.Text; // Yazar adını kaydet
              
                    a.author_surname = txtYAZARSOYAD.Text; // Yazar soyadını kaydet
                
                    a.author_nationality = txtUYRUK.Text; // Yazar uyruğunu kaydet
                

                lms.authors.Add(a);
               

                types t = new types();
               
                    t.book_type = txtTUR.Text; // Kitap türünü kaydet
                
                lms.types.Add(t);


                lms.SaveChanges();

                MessageBox.Show("Book saved successfully.");

                BtnBookList_Click(sender, e); // Refresh the DataGridView after saving the book
            }
            else if (comboBox1.SelectedItem.ToString() == "APPOINTMENT (for admins)")
            {

                appointment a = new appointment();

                
                    a.appointment_date = Convert.ToDateTime(dateRANDEVU.Text);
               
                    a.return_date = Convert.ToDateTime(dateGeriDonus.Text);
               
              
                    a.book_id = Convert.ToInt32(txtSELECTEDBOOKID.Text);
                
                    a.user_id = Convert.ToInt32(txtappuserıd.Text);
                
              
                lms.appointment.Add(a);

                lms.SaveChanges();

                MessageBox.Show("Appointment saved successfully.");

                BtnShow_Click(sender, e); // Refresh the DataGridView after saving the appointment


            }

            else
            {
                MessageBox.Show("UNSUCCESSFUL");
            }
        }


        private void BtnUpdate_Click(object sender, EventArgs e)
        {
            if (comboBox1.SelectedItem.ToString() == "USER")
            {
                int user_id = Convert.ToInt32(txtID.Text);
                var user = lms.users.Find(user_id);

                if (user != null)
                {
                    // Her bir alan için ayrı bir if bloğu kullan
                    if (!string.IsNullOrEmpty(txtAD.Text)) // Eğer ad alanı boş değilse
                    {
                        user.user_name = txtAD.Text; // Adı güncelle
                    }
                    if (!string.IsNullOrEmpty(txtSOYAD.Text)) // Eğer soyad alanı boş değilse
                    {
                        user.user_surname = txtSOYAD.Text; // Soyadı güncelle
                    }
                    if (dateDGUNU.Value != null) // Eğer doğum tarihi alanı boş değilse
                    {
                        user.user_birthday = dateDGUNU.Value; // Doğum tarihini güncelle
                    }
                    if (!string.IsNullOrEmpty(txtEMAIL.Text)) // Eğer email alanı boş değilse
                    {
                        user.user_email = txtEMAIL.Text; // Emaili güncelle
                    }

                    lms.SaveChanges();
                    MessageBox.Show("User updated successfully.");

                    BtnUserList_Click(sender, e); // Refresh the DataGridView after updating the user
                }
            

            else
            {
                    MessageBox.Show("User not found.");
                }
            }
            else if (comboBox1.SelectedItem.ToString() == "ADMIN")
            {
                int book_id = Convert.ToInt32(txtBOOKID.Text);
                var book = lms.books.Find(book_id);

                if (book != null)
                {
                    var author = lms.authors.Find(book.book_author_id);
                    var type = lms.types.Find(book.book_id);

                    // Her bir alan için ayrı bir if bloğu kullan
                    if (!string.IsNullOrEmpty(txtKITAPISMI.Text)) // Eğer kitap ismi alanı boş değilse
                    {
                        book.book_name = txtKITAPISMI.Text; // Kitap ismini güncelle
                    }
                    if (!string.IsNullOrEmpty(txtSAYFASAYISI.Text))
                    {
                        book.book_pages = Convert.ToInt32(txtSAYFASAYISI.Text);
                    }
                    if (!string.IsNullOrEmpty(txtYAZARSOYAD.Text)) // Eğer yazar soyadı alanı boş değilse
                    {
                        author.author_surname = txtYAZARSOYAD.Text; // Yazar soyadını güncelle
                    }
                    if (!string.IsNullOrEmpty(txtYAZARAD.Text)) // Eğer yazar adı alanı boş değilse
                    {
                        author.author_name = txtYAZARAD.Text; // Yazar adını güncelle
                    }
                    if (!string.IsNullOrEmpty(txtUYRUK.Text)) // Eğer yazar uyruğu alanı boş değilse
                    {
                        author.author_nationality = txtUYRUK.Text; // Yazar uyruğunu güncelle
                    }
                    if (!string.IsNullOrEmpty(txtTUR.Text)) // Eğer kitap türü alanı boş değilse
                    {
                        type.book_type = txtTUR.Text; // Kitap türünü güncelle
                    }

                    lms.SaveChanges();
                    MessageBox.Show("Book updated successfully.");

                    BtnBookList_Click(sender, e);
                }
                else
                {
                    MessageBox.Show("Book not found.");
                }
            }
            else if (comboBox1.SelectedItem.ToString() == "APPOINTMENT (for admins)")
            {
                int app_userid = Convert.ToInt32(txtappuserıd.Text);
                var appointment = lms.appointment.SingleOrDefault(a => a.user_id == app_userid);

                if (appointment != null)
                {
                    // Update appointment properties based on the conditions
                    if (dateRANDEVU.Value != null)
                    {
                        appointment.appointment_date = dateRANDEVU.Value;
                    }
                    if (dateGeriDonus.Value != null)
                    {
                        appointment.return_date = dateGeriDonus.Value;
                    }
                    if (!string.IsNullOrEmpty(txtSELECTEDBOOKID.Text))
                    {
                        appointment.book_id = Convert.ToInt32(txtSELECTEDBOOKID.Text);
                    }

                    // Save the changes to the database
                    lms.SaveChanges();
                }


                lms.SaveChanges();
                MessageBox.Show("Appointment updated successfully.");
                BtnShow_Click(sender, e);

            }


            else
            {
                MessageBox.Show("Please make a selection.");
            }
        }

        private void BtnDelete_Click(object sender, EventArgs e)
        {
            if (comboBox1.SelectedItem.ToString() == "USER")
            {
                int user_id = Convert.ToInt32(txtID.Text);
                var user = lms.users.Find(user_id);

                lms.users.Remove(user);
                lms.SaveChanges();
                MessageBox.Show("User deleted successfully.");

                BtnUserList_Click(sender, e); // Refresh the DataGridView after deleting the user
            }
            else if (comboBox1.SelectedItem.ToString() == "ADMIN")
            {
                int book_id = Convert.ToInt32(txtBOOKID.Text);
                var book = lms.books.Find(book_id);

                lms.books.Remove(book);
                lms.SaveChanges();
                MessageBox.Show("Book deleted successfully.");

                BtnBookList_Click(sender, e); // Refresh the DataGridView after deleting the book
            }
            else if (comboBox1.SelectedItem.ToString() == "APPOINTMENT (for admins)")
            {
                int appointment_id = Convert.ToInt32(txtappointmentID.Text);
                var app = lms.appointment.Find(appointment_id);

                lms.appointment.Remove(app);
                lms.SaveChanges();
                MessageBox.Show("Appointment deleted successfully.");
                                BtnShow_Click(sender, e);
            }
            else
            {
                MessageBox.Show("Invalid selection.");
            }
           
        }


        private void BtnShow_Click(object sender, EventArgs e)
        {
            if (comboBox1.SelectedItem.ToString() == "USER")
            {
                var query = from u in lms.users
                            join ap in lms.appointment on u.user_id equals ap.user_id
                            join book in lms.books on ap.book_id equals book.book_id
                            select new
                            {
                                UserID = u.user_id,
                                UserName = u.user_name,
                                UserSurname = u.user_surname,
                                UserEmail = u.user_email,
                                UserBirthdate = u.user_birthday,
                                AppointmentDate = ap.appointment_date,
                                ReturnDate = ap.return_date,
                                SelectedBookID = ap.book_id,
                                SelectedBookName = book.book_name,
                              
                            };

                dataGridView1.DataSource = query.ToList();
            }
        

            else if (comboBox1.SelectedItem.ToString() == "ADMIN")
            {
                var query = from b in lms.books
                            join a in lms.authors on b.book_author_id equals a.author_id
                            join t in lms.types on b.book_id equals t.book_id
                            select new
                            {
                                BookID = b.book_id,
                                BookType = t.book_type,
                                AuthorName = a.author_name,
                                AuthorSurname = a.author_surname,
                                AuthorNationality = a.author_nationality,
                                BookName = b.book_name,
                                BookPages = b.book_pages
                            };

                dataGridView1.DataSource = query.ToList();
            }

            else if (comboBox1.SelectedItem.ToString() == "APPOINTMENT (for admins)")
            {
                var query = from app in lms.appointment
                            join user in lms.users on app.user_id equals user.user_id
                            join book in lms.books on app.book_id equals book.book_id

                            select new
                            {
                                AppointmentID=app.appointment_id,
  AppointmentDate = app.appointment_date,
  ReturnDate=app.return_date,
  UserID= user.user_id,
  UserInformation = user.user_name + " " +user.user_surname,
                                SelectedBookID = book.book_id,
  SelectedBookName =book.book_name
  
                            };
                dataGridView1.DataSource = query.ToList();
            }

            else
            {
                MessageBox.Show(" ");
            }
        




    }

        private void dateDGUNU_ValueChanged(object sender, EventArgs e)
        {
            dateDGUNU.CustomFormat = "dd-MM-yyyy";
        }

        private void dateRANDEVU_ValueChanged(object sender, EventArgs e)
        {
            dateRANDEVU.CustomFormat = "dd-MM-yyyy";
        }

        private void dateGeriDonus_ValueChanged(object sender, EventArgs e)
        {
            dateGeriDonus.CustomFormat = "dd-MM-yyyy";
        }

        private void label14_Click(object sender, EventArgs e)
        {

        }
    }
}
